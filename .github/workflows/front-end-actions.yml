name: FRONT-END Build & test THEN SonarQube THEN Docker

on:
    push:
        branches:
            - develop
    pull_request:
        types: [opened, synchronize, reopened]
        branches:
            - main
jobs:          
    frontend:
        name: Build & Test Frontend
        runs-on: ubuntu-latest

        defaults:
          run:
            working-directory: ${{ github.workspace }}/front
        
        steps:
          - name: Git Checkout Front
            uses: actions/checkout@v2

          - name: Install Frontend Dependencies
            run: npm install
            
          - name: Execute Frontend Tests
            run: npm run test:gitactions

          - name: Frontend Code Coverage Report
            uses: actions/upload-artifact@v4
            with:
              name: Jest Code Coverage
              path: ./front/coverage/bobapp
              
    sonar-frontend:
      needs: frontend
      defaults:
        run:
          working-directory: ${{ github.workspace }}/front
        
      name: Sonar Cloud Front-End Scan
      runs-on: self-hosted
      steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Setup Node
        uses: actions/setup-node@v4 
        with: 
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: ./front/package-lock.json
      - name: install SonarQube scanner 
        run: npm install -g sonarqube-scanner
      - name: Run SonarQube 
        run: >
            sonar-scanner
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_FRONT }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
            
    docker-frontend:
        needs: sonar-frontend
        name: Image Docker Front-end
        runs-on: ubuntu-latest
        steps:
          - name: Checkout
            uses: actions/checkout@v3
    
          - name: Login to Docker Hub
            uses: docker/login-action@v3
            with:
              username: ${{ secrets.DOCKERHUB_USERNAME }}
              password: ${{ secrets.DOCKERHUB_TOKEN }}
    
          - name: Setting up Docker Buildx
            uses: docker/setup-buildx-action@v3
    
          - name: Build and push
            uses: docker/build-push-action@v6
            with:
              context: ./front
              file: ./front/Dockerfile
              push: true
              tags: floriancicd/bobapp-front:latest
            

            
